{"version":3,"sources":["context/user.js","components/MenuBar.js","hooks/useGetUsers.js","components/Signup.js","components/Login.js","components/Home.js","components/Chart.js","components/Portfolio.js","hooks/useFetchStocks.js","components/Stock.js","components/App.js","index.js"],"names":["UserContext","React","createContext","UserProvider","children","useState","isLoggedIn","id","username","password","stocks","currentUser","setCurrentUser","Provider","value","MenuBar","props","activeTab","setActiveTab","handleClick","event","target","useContext","user","Menu","links","map","link","index","loggedInRequired","Item","name","active","as","NavLink","exact","to","path","onClick","toUpperCase","position","Input","icon","placeholder","useGetUsers","OPTION","fetchData","userList","setUserList","useEffect","fetch","then","res","json","data","finally","console","error","catch","err","saltedSha256","require","Signup","passwordConfirmation","requirePassword","status","message","formData","setFormData","handleChange","updateFormMessages","Form","onSubmit","preventDefault","length","find","saltedHash","method","headers","body","JSON","stringify","statusText","warning","success","Field","onChange","Checkbox","label","checked","type","Message","list","Button","color","Login","selectedUser","setSelectedUser","setUser","selected","disabled","Home","Grid","centered","columns","Column","Segment","Rail","Divider","horizontal","stock","Chart","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","responsive","plugins","legend","title","display","text","stockName","labels","datasets","borderColor","backgroundColor","Portfolio","stocksArray","setStocksArray","Promise","all","API_KEY","push","e","CardGroup","itemsPerRow","Card","Content","Object","keys","key","split","reverse","useFetchStocks","query","stockData","setStockData","setStockName","stockUrl","Stock","setQuery","fluid","setFluid","searchString","handleSearch","dbURL","Header","textAlign","action","onKeyPress","basic","extra","className","App","routerLinks","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15dd481f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst UserContext = React.createContext();\n\nfunction UserProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState({\n    isLoggedIn: false,\n    id: null,\n    username: null,\n    password: null,\n    stocks: [],\n  });\n  return (\n    <UserContext.Provider value={[currentUser, setCurrentUser]}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport { UserContext, UserProvider };\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Input, Menu } from \"semantic-ui-react\";\nimport { UserContext } from \"../context/user\";\n\nfunction MenuBar(props) {\n  const [activeTab, setActiveTab] = useState(\"\");\n\n  function handleClick(event) {\n    const id = event.target.id;\n    setActiveTab(id);\n  }\n\n  const [user] = useContext(UserContext);\n\n  return (\n    <div>\n      <Menu>\n        {props.links.map((link, index) => {\n          if (link.loggedInRequired && user.isLoggedIn) {\n            // Renders links that require login\n            return (\n              <Menu.Item\n                key={index}\n                id={link.name}\n                active={activeTab === link.name}\n                as={NavLink}\n                exact\n                to={link.path}\n                onClick={handleClick}\n              >\n                {link.name.toUpperCase()}\n              </Menu.Item>\n            );\n          } else if (!link.loggedInRequired) {\n            // Renders links that does not require login\n            return (\n              <Menu.Item\n                key={index}\n                id={link.name}\n                active={activeTab === link.name}\n                as={NavLink}\n                exact\n                to={link.path}\n                onClick={handleClick}\n              >\n                {link.name.toUpperCase()}\n              </Menu.Item>\n            );\n          } else {\n            // Do nothing\n            return null;\n          }\n        })}\n        {user.isLoggedIn && activeTab === \"portfolio\" ? (\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              <Input icon='search' placeholder='Search...' />\n            </Menu.Item>\n          </Menu.Menu>\n        ) : null}\n      </Menu>\n    </div>\n  );\n}\n\nexport default MenuBar;\n","import { useState, useEffect } from \"react\";\n\nfunction useGetUsers(OPTION) {\n  // OPTIONS = [\"USERNAMES\", \"USER-LIST\"];\n  const [userList, setUserList] = useState([]);\n  const url = \"https://dry-lowlands-31397.herokuapp.com/users\";\n  let fetchData;\n\n  useEffect(() => {\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        data =>\n          (fetchData = data.map(user => {\n            return {\n              id: user.id,\n              username: user.username,\n              password: user.password,\n              stocks: user.stocks,\n            };\n          }))\n      )\n      .finally(() => {\n        switch (OPTION) {\n          case \"USERNAMES\":\n            setUserList(\n              fetchData.map(data => ({\n                username: data.username,\n              }))\n            );\n            break;\n          case \"USER-LIST\":\n            setUserList(\n              fetchData.map(data => ({\n                id: data.id,\n                username: data.username,\n                password: data.password,\n                stocks: data.stocks,\n              }))\n            );\n            break;\n          default:\n            console.error(\"Something went wrong!\");\n        }\n      })\n      .catch(err => console.error(err));\n  }, []);\n  return [userList, setUserList];\n}\n\nexport default useGetUsers;\n","import React, { useState } from \"react\";\nimport { Button, Checkbox, Form, Message } from \"semantic-ui-react\";\nimport useGetUsers from \"../hooks/useGetUsers\";\nconst saltedSha256 = require(\"salted-sha256\");\n\nfunction Signup() {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    requirePassword: false,\n    status: \"\",\n    message: \"\",\n  });\n\n  const [userList, setUserList] = useGetUsers(\"USERNAMES\");\n\n  function handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormData({ ...formData, [name]: value });\n  }\n\n  function handleClick() {\n    setFormData({ ...formData, requirePassword: !formData.requirePassword });\n  }\n\n  function updateFormMessages(status, message) {\n    setFormData({ ...formData, status: status, message: message });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (formData.username.length === 0) {\n      updateFormMessages(\n        \"warning\",\n        \"Please enter 1 or more character(s) for the username\"\n      );\n    } else if (userList.find((user) => user.username === formData.username)) {\n      updateFormMessages(\"warning\", \"User exists!\");\n    } else if (\n      formData.requirePassword &&\n      formData.password !== formData.passwordConfirmation\n    ) {\n      updateFormMessages(\"warning\", \"Passwords does not match!\");\n    } else {\n      setFormData({ ...formData, message: \"\" });\n      const url = \"https://dry-lowlands-31397.herokuapp.com/users\";\n      const saltedHash = formData.requirePassword\n        ? saltedSha256(formData.password, \"SALTY-CHIPS\")\n        : \"\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          password: saltedHash,\n          stocks: [],\n        }),\n      })\n        .then((res) => {\n          if (res.statusText === \"Created\") {\n            setFormData({\n              username: \"\",\n              password: \"\",\n              passwordConfirmation: \"\",\n              requirePassword: false,\n              status: \"success\",\n              message: \"Your portfolio has been successfully created.\",\n            });\n            return res.json();\n          }\n        })\n        .then((data) => setUserList([...userList, data.username]));\n    }\n  }\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      warning={formData.status === \"warning\"}\n      success={formData.status === \"success\"}\n    >\n      <Form.Field>\n        <label>Portfolio by Username:</label>\n        <input\n          name=\"username\"\n          placeholder=\"Username\"\n          value={formData.username}\n          onChange={handleChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Checkbox\n          label=\"Use password (optional)\"\n          name=\"requirePassword\"\n          onClick={handleClick}\n          checked={formData.requirePassword}\n        />\n      </Form.Field>\n      {formData.requirePassword ? (\n        <>\n          <Form.Field>\n            <label>Password: </label>\n            <input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={formData.password}\n              onChange={handleChange}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Confirm Password:</label>\n            <input\n              name=\"passwordConfirmation\"\n              type=\"password\"\n              placeholder=\"Re-Enter Password\"\n              value={formData.passwordConfirmation}\n              onChange={handleChange}\n            />\n          </Form.Field>\n        </>\n      ) : null}\n      {formData.status ? (\n        <Message\n          warning={formData.status === \"warning\"}\n          success={formData.status === \"success\"}\n          list={[formData.message]}\n        />\n      ) : null}\n      <Button type=\"submit\" color=\"green\">\n        Create\n      </Button>\n    </Form>\n  );\n}\n\nexport default Signup;\n","import React, { useState, useContext } from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport useGetUsers from \"../hooks/useGetUsers\";\nimport { UserContext } from \"../context/user\";\nconst saltedSha256 = require(\"salted-sha256\");\n\nfunction Login() {\n  const [formData, setFormData] = useState({\n    password: \"\",\n  });\n\n  const [selectedUser, setSelectedUser] = useState({\n    id: null,\n    username: \"\",\n    password: \"\",\n    stocks: [],\n  });\n  const [userList, setUserList] = useGetUsers(\"USER-LIST\");\n  const [user, setUser] = useContext(UserContext);\n\n  function handleUserSelect(event) {\n    const value = event.target.value;\n    setSelectedUser(userList.find((user) => user.id == value));\n  }\n\n  function handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormData({ ...formData, [name]: value });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (selectedUser.id === null) return null;\n    const saltedHash = saltedSha256(formData.password, \"SALTY-CHIPS\");\n    if (\n      selectedUser.password.length > 0 &&\n      selectedUser.password !== saltedHash\n    ) {\n      // TODO: Implement <Message/> in form\n      console.error(\"Invalid password\");\n    } else {\n      setUser({\n        id: selectedUser.id,\n        username: selectedUser.username,\n        password: selectedUser.password,\n        stocks: selectedUser.stocks,\n        isLoggedIn: true,\n      });\n    }\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Field>\n        <label>Load Portfolio by Username:</label>\n        <select onChange={handleUserSelect}>\n          <option selected value={0} disabled></option>\n          {userList.map((user, index) => (\n            <option name=\"id\" key={index} value={user.id}>\n              {user.username}\n            </option>\n          ))}\n        </select>\n      </Form.Field>\n      {selectedUser.password ? (\n        <Form.Field>\n          <label>Password:</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={formData.password}\n            onChange={handleChange}\n          />\n        </Form.Field>\n      ) : null}\n      <Button type=\"submit\" color=\"blue\">\n        Load Portfolio\n      </Button>\n    </Form>\n  );\n}\nexport default Login;\n","import React, { useContext } from \"react\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport { Divider, Grid, Rail, Segment } from \"semantic-ui-react\";\nimport { UserContext } from \"../context/user\";\n\nfunction Home() {\n  const [user] = useContext(UserContext);\n  return (\n    <Grid centered columns={3}>\n      <Grid.Column>\n        <Segment>\n          {user.isLoggedIn ? null : (\n            <>\n              <Rail position='left'>\n                <Segment>\n                  <Signup />\n                </Segment>\n              </Rail>\n\n              <Rail position='right'>\n                <Segment>\n                  <Login />\n                </Segment>\n              </Rail>\n            </>\n          )}\n\n          <h3>\n            <i>Flatiron School - SE Flex - Phase 2 - Portfolio App</i>\n          </h3>\n          <Divider horizontal>o</Divider>\n          <div>\n            {user.isLoggedIn ? (\n              <>\n                <p>Welcome back: {user.username}</p>\n                <br></br>\n                You are currently watching:\n                <ul>\n                  {user.stocks.map((stock, index) => (\n                    <li key={index}>{stock}</li>\n                  ))}\n                </ul>\n              </>\n            ) : (\n              <p>Create a new portfolio or select an existing portfolio!</p>\n            )}\n          </div>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction Chart(props) {\n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n  );\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: `${props.stockName} - Time Series Chart - INTRADAY`,\n      },\n    },\n  };\n  const labels = [...props.labels];\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: `${props.stockName}`,\n        data: [...props.data],\n        borderColor: \"rgb(255, 99, 132)\",\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n    ],\n  };\n  return <Line options={options} data={data} />;\n}\n\nexport default Chart;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Card, CardGroup, Divider } from \"semantic-ui-react\";\nimport { UserContext } from \"../context/user\";\nimport Chart from \"./Chart\";\nimport API_KEY from \"../assets/API.json\";\n\nfunction Portfolio() {\n  const [user] = useContext(UserContext);\n  const [stocksArray, setStocksArray] = useState([]);\n\n  useEffect(() => {\n    let stocks = [];\n    try {\n      Promise.all(\n        user.stocks.map((stock) =>\n          fetch(\n            `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&interval=5min&apikey=${API_KEY}&symbol=` +\n              stock\n          )\n            .then((res) => res.json())\n            .then((data) => data)\n        )\n      )\n        .then((res) => stocks.push(res))\n        .then(() => {\n          setStocksArray([...stocks[0]]);\n        });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [user.stocks]);\n\n  return (\n    <div>\n      <Divider horizontal></Divider>\n      <h3>Portfolio Page</h3>\n      <Divider horizontal></Divider>\n\n      {stocksArray !== [] ? (\n        <CardGroup centered itemsPerRow={2}>\n          {stocksArray.map((stock, index) => {\n            return (\n              <Card key={index}>\n                <Card.Content>{stock[\"Meta Data\"][\"2. Symbol\"]}</Card.Content>\n                <Card.Content>\n                  <Chart\n                    stockName={stock[\"Meta Data\"][\"2. Symbol\"]}\n                    labels={Object.keys(stock[\"Time Series (5min)\"])\n                      .map((key) => key.split(\" \")[1])\n                      .reverse()}\n                    data={Object.keys(stock[\"Time Series (5min)\"])\n                      .map(\n                        (key) =>\n                          stock[\"Time Series (5min)\"][`${key}`][\"4. close\"]\n                      )\n                      .reverse()}\n                  />\n                </Card.Content>\n              </Card>\n            );\n          })}\n        </CardGroup>\n      ) : (\n        <p>Your portfolio is currently empty!</p>\n      )}\n    </div>\n  );\n}\n\nexport default Portfolio;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport API_KEY from \"../assets/API.json\";\nimport { UserContext } from \"../context/user\";\n\nfunction useFetchStocks(query) {\n  const [stockData, setStockData] = useState(null);\n  const [stockName, setStockName] = useState(null);\n\n  useEffect(() => {\n    if (query === \"\") return null;\n    const stockUrl = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&interval=5min&apikey=${API_KEY}&symbol=`;\n    fetch(stockUrl + query)\n      .then(res => res.json())\n      .then(data => {\n        setStockData(data);\n        setStockName(data[\"Meta Data\"][\"2. Symbol\"]);\n      });\n  }, [query]);\n\n  return [stockData, stockName];\n}\n\nexport default useFetchStocks;\n","import React, { useState, useContext } from \"react\";\nimport { Button, Card, Form, Image, Input } from \"semantic-ui-react\";\nimport Chart from \"./Chart\";\nimport { UserContext } from \"../context/user\";\nimport useFetchStocks from \"../hooks/useFetchStocks\";\n\n{\n  /*\n\nlet chartKey = Object.keys(chartData[\"Time Series (5min)\"]).map((key)=> key.split(' ')[1]).reverse()\nChanges 2022-07-13 18:45:00 to 18:45:00\n\nObject.keys(chartData['Time Series (5min)']).map((key) => console.log(chartData['Time Series (5min)'][`${key}`]['4. close'])).reverse()\n\n\n*/\n}\n\nfunction Stock() {\n  const [user, setUser] = useContext(UserContext);\n  const [query, setQuery] = useState(\"\");\n  const [stockData, stockName] = useFetchStocks(query);\n  const [fluid, setFluid] = useState(false);\n  const [formData, setFormData] = useState({\n    searchString: \"\",\n  });\n  function handleSearch(event) {\n    if (event.key !== \"Enter\") {\n      return null;\n    }\n    if (formData.searchString === \"\") return null;\n    setQuery(formData.searchString);\n  }\n\n  const dbURL = `https://dry-lowlands-31397.herokuapp.com/users/${user.id}`;\n  function handleClick() {\n    fetch(dbURL, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"PATCH\",\n      body: JSON.stringify({\n        stocks: [...user.stocks, stockName],\n      }),\n    })\n      .then(() => setUser({ ...user, stocks: [...user.stocks, stockName] }))\n      .catch(err => console.error(err));\n  }\n  return (\n    <Card centered color='olive' fluid={fluid}>\n      <Card.Header textAlign={\"center\"}>\n        <Input\n          action\n          onKeyPress={handleSearch}\n          placeholder='Enter Stock Name Here...'\n          fluid\n          value={formData.searchString}\n          onChange={event =>\n            setFormData({\n              ...formData,\n              searchString: event.target.value.toUpperCase(),\n            })\n          }\n        >\n          <input />\n          <Button basic color='green' onClick={handleSearch}>\n            Search\n          </Button>\n        </Input>\n      </Card.Header>\n      {stockData ? (\n        <>\n          <Chart\n            stockName={stockName}\n            labels={Object.keys(stockData[\"Time Series (5min)\"])\n              .map(key => key.split(\" \")[1])\n              .reverse()}\n            data={Object.keys(stockData[\"Time Series (5min)\"])\n              .map(key => stockData[\"Time Series (5min)\"][`${key}`][\"4. close\"])\n              .reverse()}\n          />\n          <Card.Content textAlign={\"center\"}></Card.Content>\n          <Card.Content extra>\n            <div className='ui two buttons'>\n              <Button basic color='green' onClick={handleClick}>\n                Add Stock to Porfolio\n              </Button>\n              <Button basic color='grey' onClick={() => setFluid(!fluid)}>\n                {fluid ? \"Collapse\" : \"Expand\"}\n              </Button>\n            </div>\n          </Card.Content>\n        </>\n      ) : null}\n    </Card>\n  );\n}\n\nexport default Stock;\n","import React, { useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MenuBar from \"./MenuBar\";\nimport Home from \"./Home\";\nimport Portfolio from \"./Portfolio\";\nimport Stock from \"./Stock\";\nimport { UserContext } from \"../context/user\";\nimport { Divider } from \"semantic-ui-react\";\n\nfunction App() {\n  const routerLinks = [\n    {\n      name: \"home\",\n      path: \"/\",\n      loggedInRequired: false,\n      component: Home,\n    },\n    {\n      name: \"portfolio\",\n      path: \"/portfolio\",\n      loggedInRequired: true,\n      component: Portfolio,\n    },\n    {\n      name: \"stock\",\n      path: \"/stock\",\n      loggedInRequired: true,\n      component: Stock,\n    },\n  ];\n  const [user] = useContext(UserContext);\n  return (\n    <div>\n      <MenuBar links={routerLinks} />\n      <Divider horizontal></Divider>\n      <Switch>\n        {routerLinks.map((link, index) => (\n          <Route key={index} exact path={link.path} component={link.component}>\n            {link.loggedInRequired && user.isLoggedIn ? null : <Home />}\n          </Route>\n        ))}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport { UserProvider } from \"./context/user\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}