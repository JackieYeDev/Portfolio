{"version":3,"sources":["context/user.js","components/MenuBar.js","components/Signup.js","components/Login.js","hooks/useGetUsersList.js","components/Home.js","components/Chart.js","components/StockCard.js","components/Watchlist.js","hooks/useFetchStocks.js","components/Stock.js","components/App.js","index.js"],"names":["UserContext","React","createContext","UserProvider","children","useState","isLoggedIn","id","username","password","stocks","currentUser","setCurrentUser","Provider","value","MenuBar","props","activeTab","setActiveTab","handleClick","event","target","useContext","user","Menu","links","map","link","index","loggedInRequired","Item","name","active","as","NavLink","exact","to","path","onClick","toUpperCase","saltedSha256","require","Signup","passwordConfirmation","requirePassword","status","message","formData","setFormData","usernameList","handleChange","updateFormMessages","Form","onSubmit","preventDefault","length","find","saltedHash","fetch","method","headers","body","JSON","stringify","then","res","statusText","json","data","setUserList","userList","warning","success","Field","placeholder","onChange","Checkbox","label","checked","type","Message","list","Button","color","Login","selectedUser","setSelectedUser","setUser","selected","disabled","useGetUsersList","fetchData","useEffect","finally","catch","err","console","error","Home","Grid","centered","columns","Column","Segment","Rail","position","Divider","horizontal","stock","Chart","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","responsive","plugins","legend","title","display","text","stockName","labels","datasets","borderColor","backgroundColor","StockCard","Card","Content","Object","keys","key","split","reverse","extra","basic","removeStock","Watchlist","stocksArray","setStocksArray","searchString","setSearchString","url","API_KEY","Promise","all","push","e","stocksToRender","filter","toLowerCase","includes","newArr","Header","textAlign","content","Input","icon","CardGroup","itemsPerRow","useFetchStocks","query","stockData","setStockData","setStockName","stockUrl","Stock","setQuery","fluid","setFluid","messageData","setMessageData","handleSearch","dbURL","action","onKeyPress","className","App","routerLinks","component","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.7015a45c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst UserContext = React.createContext();\n\nfunction UserProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState({\n    isLoggedIn: false,\n    id: null,\n    username: null,\n    password: null,\n    stocks: [],\n  });\n  return (\n    <UserContext.Provider value={[currentUser, setCurrentUser]}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport { UserContext, UserProvider };\n","import React, { useState, useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Menu } from \"semantic-ui-react\";\nimport { UserContext } from \"../context/user\";\n\nfunction MenuBar(props) {\n  const [activeTab, setActiveTab] = useState(\"\");\n\n  function handleClick(event) {\n    const id = event.target.id;\n    setActiveTab(id);\n  }\n\n  const [user] = useContext(UserContext);\n\n  return (\n    <div>\n      <Menu>\n        {props.links.map((link, index) => {\n          if (link.loggedInRequired && user.isLoggedIn) {\n            // Renders links that require login\n            return (\n              <Menu.Item\n                key={index}\n                id={link.name}\n                active={activeTab === link.name}\n                as={NavLink}\n                exact\n                to={link.path}\n                onClick={handleClick}\n              >\n                {link.name.toUpperCase()}\n              </Menu.Item>\n            );\n          } else if (!link.loggedInRequired) {\n            // Renders links that does not require login\n            return (\n              <Menu.Item\n                key={index}\n                id={link.name}\n                active={activeTab === link.name}\n                as={NavLink}\n                exact\n                to={link.path}\n                onClick={handleClick}\n              >\n                {link.name.toUpperCase()}\n              </Menu.Item>\n            );\n          } else {\n            // Do nothing\n            return null;\n          }\n        })}\n      </Menu>\n    </div>\n  );\n}\n\nexport default MenuBar;\n","import React, { useState } from \"react\";\nimport { Button, Checkbox, Form, Message } from \"semantic-ui-react\";\nconst saltedSha256 = require(\"salted-sha256\");\n\nfunction Signup(props) {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    requirePassword: false,\n    status: \"\",\n    message: \"\",\n  });\n\n  const usernameList = props.usernameList;\n\n  function handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormData({ ...formData, [name]: value });\n  }\n\n  function handleClick() {\n    setFormData({ ...formData, requirePassword: !formData.requirePassword });\n  }\n\n  function updateFormMessages(status, message) {\n    setFormData({ ...formData, status: status, message: message });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (formData.username.length === 0) {\n      updateFormMessages(\n        \"warning\",\n        \"Please enter 1 or more character(s) for the username\"\n      );\n    } else if (usernameList.find((user) => user === formData.username)) {\n      updateFormMessages(\"warning\", \"User exists!\");\n    } else if (\n      formData.requirePassword &&\n      formData.password !== formData.passwordConfirmation\n    ) {\n      updateFormMessages(\"warning\", \"Passwords does not match!\");\n    } else {\n      setFormData({ ...formData, message: \"\" });\n      const url = \"https://dry-lowlands-31397.herokuapp.com/users\";\n      const saltedHash = formData.requirePassword\n        ? saltedSha256(formData.password, \"SALTY-CHIPS\")\n        : \"\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          password: saltedHash,\n          stocks: [],\n        }),\n      })\n        .then((res) => {\n          if (res.statusText === \"Created\") {\n            setFormData({\n              username: \"\",\n              password: \"\",\n              passwordConfirmation: \"\",\n              requirePassword: false,\n              status: \"success\",\n              message: \"Your watchlist has been successfully created.\",\n            });\n            return res.json();\n          }\n        })\n        .then((data) => {\n          props.setUserList([...props.userList, data]);\n        });\n    }\n  }\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      warning={formData.status === \"warning\"}\n      success={formData.status === \"success\"}\n    >\n      <Form.Field>\n        <label>Create a New Watchlist by Username:</label>\n        <input\n          name=\"username\"\n          placeholder=\"Username\"\n          value={formData.username}\n          onChange={handleChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Checkbox\n          label=\"Use password (optional)\"\n          name=\"requirePassword\"\n          onClick={handleClick}\n          checked={formData.requirePassword}\n        />\n      </Form.Field>\n      {formData.requirePassword ? (\n        <>\n          <Form.Field>\n            <label>Password: </label>\n            <input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={formData.password}\n              onChange={handleChange}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Confirm Password:</label>\n            <input\n              name=\"passwordConfirmation\"\n              type=\"password\"\n              placeholder=\"Re-Enter Password\"\n              value={formData.passwordConfirmation}\n              onChange={handleChange}\n            />\n          </Form.Field>\n        </>\n      ) : null}\n      {formData.status ? (\n        <Message\n          warning={formData.status === \"warning\"}\n          success={formData.status === \"success\"}\n          list={[formData.message]}\n        />\n      ) : null}\n      <Button type=\"submit\" color=\"green\">\n        Create\n      </Button>\n    </Form>\n  );\n}\n\nexport default Signup;\n","import React, { useState, useContext } from \"react\";\nimport { Button, Form, Message } from \"semantic-ui-react\";\nimport { UserContext } from \"../context/user\";\nconst saltedSha256 = require(\"salted-sha256\");\n\nfunction Login(props) {\n  const [formData, setFormData] = useState({\n    password: \"\",\n    message: \"\",\n    status: \"\",\n  });\n\n  const [selectedUser, setSelectedUser] = useState({\n    id: null,\n    username: \"\",\n    password: \"\",\n    stocks: [],\n  });\n  const userList = props.userList;\n  const [user, setUser] = useContext(UserContext);\n\n  function handleUserSelect(event) {\n    const value = event.target.value;\n    setSelectedUser(userList.find((user) => user.id == value));\n    setFormData({ ...formData, password: \"\", status: \"\", message: \"\" });\n  }\n\n  function handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormData({ ...formData, [name]: value });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (selectedUser.id === null) return null;\n    const saltedHash = saltedSha256(formData.password, \"SALTY-CHIPS\");\n    if (\n      selectedUser.password.length > 0 &&\n      selectedUser.password !== saltedHash\n    ) {\n      setFormData({\n        ...formData,\n        status: \"warning\",\n        message: \"Invalid Password\",\n      });\n    } else {\n      setUser({\n        id: selectedUser.id,\n        username: selectedUser.username,\n        password: selectedUser.password,\n        stocks: selectedUser.stocks,\n        isLoggedIn: true,\n      });\n    }\n  }\n\n  return (\n    <Form onSubmit={handleSubmit} warning={formData.status === \"warning\"}>\n      <Form.Field>\n        <label>Load Watchlist by Username:</label>\n        <select onChange={handleUserSelect}>\n          <option selected value={0} disabled></option>\n          {userList.map((user, index) => (\n            <option name=\"id\" key={index} value={user.id}>\n              {user.username}\n            </option>\n          ))}\n        </select>\n      </Form.Field>\n      {selectedUser.password ? (\n        <Form.Field>\n          <label>Password:</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={formData.password}\n            onChange={handleChange}\n          />\n        </Form.Field>\n      ) : null}\n      <Button type=\"submit\" color=\"blue\">\n        Load Watchlist\n      </Button>\n      {formData.status ? (\n        <Message\n          warning={formData.status === \"warning\"}\n          list={[formData.message]}\n        />\n      ) : null}\n    </Form>\n  );\n}\nexport default Login;\n","import { useState, useEffect } from \"react\";\n\nfunction useGetUsersList() {\n  const [userList, setUserList] = useState([]);\n  const url = \"https://dry-lowlands-31397.herokuapp.com/users\";\n  let fetchData;\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => res.json())\n      .then(\n        (data) =>\n          (fetchData = data.map((user) => {\n            return {\n              id: user.id,\n              username: user.username,\n              password: user.password,\n              stocks: user.stocks,\n            };\n          }))\n      )\n      .finally(() => {\n        setUserList(\n          fetchData.map((data) => ({\n            id: data.id,\n            username: data.username,\n            password: data.password,\n            stocks: data.stocks,\n          }))\n        );\n      })\n      .catch((err) => console.error(err));\n  }, []);\n  return [userList, setUserList];\n}\n\nexport default useGetUsersList;\n","import React, { useContext } from \"react\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport { Divider, Grid, Rail, Segment } from \"semantic-ui-react\";\nimport { UserContext } from \"../context/user\";\nimport useGetUsersList from \"../hooks/useGetUsersList\";\n\nfunction Home() {\n  const [user] = useContext(UserContext);\n  const [userList, setUserList] = useGetUsersList();\n\n  const usernameList = userList.map((user) => user.username);\n\n  return (\n    <Grid centered columns={3}>\n      <Grid.Column>\n        <Segment>\n          {user.isLoggedIn ? null : (\n            <>\n              <Rail position=\"left\">\n                <Segment>\n                  <Signup\n                    usernameList={usernameList}\n                    setUserList={setUserList}\n                    userList={userList}\n                  />\n                </Segment>\n              </Rail>\n\n              <Rail position=\"right\">\n                <Segment>\n                  <Login userList={userList} />\n                </Segment>\n              </Rail>\n            </>\n          )}\n\n          <h3>\n            <i>Flatiron School - SE Flex - Phase 2 - Watchlist App</i>\n          </h3>\n          <Divider horizontal>o</Divider>\n          <div>\n            {user.isLoggedIn ? (\n              <>\n                <p>Welcome back: {user.username}</p>\n                <br></br>\n                You are currently watching:\n                <ul>\n                  {user.stocks.map((stock, index) => (\n                    <li key={index}>{stock}</li>\n                  ))}\n                </ul>\n              </>\n            ) : (\n              <p>Create a new watchlist or select an existing watchlist!</p>\n            )}\n          </div>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction Chart(props) {\n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n  );\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: `${props.stockName} - Time Series Chart - INTRADAY (5min)`,\n      },\n    },\n  };\n  const labels = [...props.labels];\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: `${props.stockName}`,\n        data: [...props.data],\n        borderColor: \"rgb(255, 99, 132)\",\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n    ],\n  };\n  return <Line options={options} data={data} />;\n}\n\nexport default Chart;\n","import React from \"react\";\nimport { Button, Card } from \"semantic-ui-react\";\nimport Chart from \"./Chart\";\n\nfunction StockCard(props) {\n  return (\n    <Card>\n      <Card.Content>{props.stock[\"Meta Data\"][\"2. Symbol\"]}</Card.Content>\n      <Card.Content>\n        <Chart\n          stockName={props.stock[\"Meta Data\"][\"2. Symbol\"]}\n          labels={Object.keys(props.stock[\"Time Series (5min)\"])\n            .map((key) => key.split(\" \")[1])\n            .reverse()}\n          data={Object.keys(props.stock[\"Time Series (5min)\"])\n            .map(\n              (key) => props.stock[\"Time Series (5min)\"][`${key}`][\"4. close\"]\n            )\n            .reverse()}\n        />\n      </Card.Content>\n      <Card.Content extra>\n        <Button\n          basic\n          color=\"red\"\n          onClick={() =>\n            props.removeStock(props.stock[\"Meta Data\"][\"2. Symbol\"])\n          }\n        >\n          Remove Stock from Watchlist\n        </Button>\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default StockCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardGroup,\n  Divider,\n  Header,\n  Input,\n  Segment,\n} from \"semantic-ui-react\";\nimport { UserContext } from \"../context/user\";\nimport API_KEY from \"../assets/API.json\";\nimport StockCard from \"./StockCard\";\n\nfunction Watchlist() {\n  const [user, setUser] = useContext(UserContext);\n  const [stocksArray, setStocksArray] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n\n  // TODO: Add useReducer to fetch. If fetch is not fullfilled return empty array.\n\n  useEffect(() => {\n    let stocks = [];\n    const url = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&interval=5min&apikey=${API_KEY}&symbol=`;\n    try {\n      Promise.all(\n        user.stocks.map((stock) =>\n          fetch(url + stock)\n            .then((res) => res.json())\n            .then((data) => data)\n        )\n      )\n        .then((res) => stocks.push(res))\n        .then(() => {\n          setStocksArray([...stocks[0]]);\n        });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [user.stocks]);\n\n  const stocksToRender = stocksArray.filter((stock) =>\n    stock[\"Meta Data\"][\"2. Symbol\"]\n      .toLowerCase()\n      .includes(searchString.toLowerCase())\n  );\n\n  function removeStock(stockName) {\n    const newArr = user.stocks.filter((stock) => stock !== stockName);\n    // Remove from db.json\n    fetch(`https://dry-lowlands-31397.herokuapp.com/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: user.id,\n        username: user.username,\n        password: user.password,\n        stocks: [...newArr],\n      }),\n    });\n    // Remove from current user list\n    setUser({ ...user, stocks: [...newArr] });\n  }\n  return (\n    <Segment>\n      <Header as=\"h3\" textAlign=\"center\" content={\"Watchlist Page\"} />\n      <Input\n        icon=\"search\"\n        placeholder=\"Filter stocks to display... \"\n        value={searchString}\n        onChange={(e) => setSearchString(e.target.value)}\n      />\n      <Divider horizontal></Divider>\n\n      {stocksToRender !== [] ? (\n        <CardGroup centered itemsPerRow={2}>\n          {stocksToRender.map((stock, index) => (\n            <StockCard stock={stock} key={index} removeStock={removeStock} />\n          ))}\n        </CardGroup>\n      ) : (\n        <p>Your watchlist is currently empty!</p>\n      )}\n    </Segment>\n  );\n}\n\nexport default Watchlist;\n","import React, { useState, useEffect } from \"react\";\nimport API_KEY from \"../assets/API.json\";\n\nfunction useFetchStocks(query) {\n  const [stockData, setStockData] = useState(null);\n  const [stockName, setStockName] = useState(null);\n\n  useEffect(() => {\n    if (query === \"\") return null;\n    const stockUrl = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&interval=5min&apikey=${API_KEY}&symbol=`;\n    fetch(stockUrl + query)\n      .then((res) => res.json())\n      .then((data) => {\n        setStockData(data);\n        setStockName(data[\"Meta Data\"][\"2. Symbol\"]);\n      });\n  }, [query]);\n\n  return [stockData, stockName];\n}\n\nexport default useFetchStocks;\n","import React, { useState, useContext } from \"react\";\nimport { Button, Card, Input, Message } from \"semantic-ui-react\";\nimport Chart from \"./Chart\";\nimport { UserContext } from \"../context/user\";\nimport useFetchStocks from \"../hooks/useFetchStocks\";\n\n/*\n\nlet chartKey = Object.keys(chartData[\"Time Series (5min)\"]).map((key)=> key.split(' ')[1]).reverse()\nChanges 2022-07-13 18:45:00 to 18:45:00\n\nObject.keys(chartData['Time Series (5min)']).map((key) => console.log(chartData['Time Series (5min)'][`${key}`]['4. close'])).reverse()\n\n*/\n\nfunction Stock() {\n  const [user, setUser] = useContext(UserContext);\n  const [query, setQuery] = useState(\"\");\n  const [stockData, stockName] = useFetchStocks(query);\n  const [fluid, setFluid] = useState(false);\n  const [searchString, setSearchString] = useState(\"\");\n  const [messageData, setMessageData] = useState({\n    message: \"\",\n    status: \"\",\n    color: \"\",\n  });\n  function handleSearch(event) {\n    if (event.key !== \"Enter\" || event.target.name === \"searchBtn\") {\n      return null;\n    }\n    if (searchString === \"\") return null;\n    setQuery(searchString);\n  }\n\n  const dbURL = `https://dry-lowlands-31397.herokuapp.com/users/${user.id}`;\n  function handleClick() {\n    if (\n      user.stocks.find(\n        (stock) => stock.toLowerCase() === stockName.toLowerCase()\n      )\n    ) {\n      setMessageData({\n        message: `${stockName} is already in your Watchlist`,\n        status: \"Warning:\",\n        color: \"red\",\n      });\n      return null;\n    }\n    fetch(dbURL, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"PATCH\",\n      body: JSON.stringify({\n        stocks: [...user.stocks, stockName],\n      }),\n    })\n      .then(() => {\n        setUser({ ...user, stocks: [...user.stocks, stockName] });\n        setMessageData({\n          message: `${stockName} was successfully added to the Watchlist`,\n          status: \"Success:\",\n          color: \"olive\",\n        });\n      })\n      .catch((err) => console.error(err));\n  }\n  return (\n    <>\n      <Card centered color=\"olive\" fluid={fluid}>\n        <Card.Header textAlign={\"center\"}>\n          <Input\n            action\n            onKeyPress={handleSearch}\n            placeholder=\"Enter Stock Name Here...\"\n            fluid\n            value={searchString}\n            onChange={(event) =>\n              setSearchString(event.target.value.toUpperCase())\n            }\n          >\n            <input />\n            <Button basic color=\"green\" onClick={handleSearch}>\n              Search\n            </Button>\n          </Input>\n        </Card.Header>\n        {stockData ? (\n          <>\n            <Chart\n              stockName={stockName}\n              labels={Object.keys(stockData[\"Time Series (5min)\"])\n                .map((key) => key.split(\" \")[1])\n                .reverse()}\n              data={Object.keys(stockData[\"Time Series (5min)\"])\n                .map(\n                  (key) => stockData[\"Time Series (5min)\"][`${key}`][\"4. close\"]\n                )\n                .reverse()}\n            />\n            <Card.Content textAlign={\"center\"}></Card.Content>\n            <Card.Content extra>\n              <div className=\"ui two buttons\">\n                <Button\n                  basic\n                  color=\"green\"\n                  name=\"searchBtn\"\n                  onClick={handleClick}\n                >\n                  Add Stock to Watchlist\n                </Button>\n                <Button basic color=\"grey\" onClick={() => setFluid(!fluid)}>\n                  {fluid ? \"Collapse\" : \"Expand\"}\n                </Button>\n              </div>\n            </Card.Content>\n            {messageData.message ? (\n              <Message color={messageData.color}>\n                <Message.Header>{messageData.status}</Message.Header>\n                <p>{messageData.message}</p>\n              </Message>\n            ) : null}\n          </>\n        ) : null}\n      </Card>\n    </>\n  );\n}\n\nexport default Stock;\n","import React, { useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MenuBar from \"./MenuBar\";\nimport Home from \"./Home\";\nimport Watchlist from \"./Watchlist\";\nimport Stock from \"./Stock\";\nimport { UserContext } from \"../context/user\";\nimport { Divider } from \"semantic-ui-react\";\n\nfunction App() {\n  const routerLinks = [\n    {\n      name: \"home\",\n      path: \"/\",\n      loggedInRequired: false,\n      component: Home,\n    },\n    {\n      name: \"watchlist\",\n      path: \"/watchlist\",\n      loggedInRequired: true,\n      component: Watchlist,\n    },\n    {\n      name: \"stock\",\n      path: \"/stock\",\n      loggedInRequired: true,\n      component: Stock,\n    },\n  ];\n  const [user] = useContext(UserContext);\n  return (\n    <div>\n      <MenuBar links={routerLinks} />\n      <Divider horizontal></Divider>\n      <Switch>\n        {routerLinks.map((link, index) => (\n          <Route key={index} exact path={link.path} component={link.component}>\n            {link.loggedInRequired && user.isLoggedIn ? null : <Home />}\n          </Route>\n        ))}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport { UserProvider } from \"./context/user\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/Watchlist\">\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}